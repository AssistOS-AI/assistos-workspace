{"name":"AddCapabilities","content":"({\nstart: function(appId){\n\tlet application = webSkel.currentUser.space.getApplication(appId);\n        let agentFlows =application.flows.filter((flow)=>flow.tags.includes(\"agents\"));\n        let operations = agentFlows.filter((flow) => flow.agentConfigs).map((flow) => ({\n                description: flow.agentConfigs.description,\n            }));\n\tthis.prompt = `Here is a list of tasks that a custom GPT assistant can perform in a software application: ${JSON.stringify(operations )}. For each of them, summarize their description in a minimum amount of words. If possible use only one word per description. Use uppercase for every first letter of a word. Your response should look like this: {\"capabilities\":[\"summary 1\", \"summary 2\", ... , \"summary n\"]}`;\n    this.setDefaultValues();\n    this.setIntelligenceLevel(3);\n    this.setResponseFormat(\"json_object\");\n    this.execute(agent);\n    },\nexecute: async function(agent){\n\tlet agent = webSkel.currentUser.space.agent;\n\tlet response = await this.request(this.prompt);\n\ttry{\n\t\tlet capabilities = JSON.parse(response);\n\t\tfor(let capability of capabilities){\n\t\t\tagent.addCapability(capability);\n\t\t}\n\t}catch(e){\n\t\tthis.fail(e);\n\t}\n    this.return(response);\n    }\n})","id":"3RJcNTBjDu9w","description":"Adds capabilities to the agent, based on the applications that are installed in the system","tags":["agents","space"]}