{"name":"generate document","content":"({\nstart: function(title, topic, chaptersCount, personalityId, maxTokens){\n    let personalityPrompt;\n    if(personalityId){\n        let personality = webSkel.currentUser.space.getPersonality(personalityId);\npersonalityPrompt = `Step into the shoes of ${personality.name}, a character known for their distinctive traits: ${personality.description}. Your mission is to create a document in such a way that it encapsulates the distinct essence of this character. `;\n    }\n    this.prompt = `${personalityPrompt || \"\"}Please generate a document based on the following topic: \"${topic}\" and title: \"${title}\". The document should have ${chaptersCount} chapters. The response should have the following structure: {\"title\": \"${title}\", \"topic\":\"${topic}\", \"abstract\": \"abstract of the document\", \"mainIdeas\":[\"idea 1 of the document\", \"idea 2 of the document\", ... , \"idea ${chaptersCount} of the document\"], \"chapters\": [{chapter 1}, {chapter 2},..., {chapter ${chaptersCount}}]}. A chapter should have the following structure:{\"title\":\"Chapter Title\", \"mainIdeas\":[\"idea 1\", \"idea 2\", ... , idea n\"], \"paragraphs\":[{text:\"paragraph 1 text\", mainIdea:\"paragraph 1 summary\"}, {text:\"paragraph 2 text\", mainIdea:\"paragraph 2 summary\"}, ... {text:\"paragraph n text\", mainIdea:\"paragraph n summary\"}]}.`;\n    this.setDefaultValues();\n    this.setIntelligenceLevel(3);\n    this.execute();\n},\nexecute: async function(){\n        let document = await this.request(this.prompt);\n        try{\n            let docObj = JSON.parse(document);\n            await webSkel.currentUser.space.addDocument(docObj);\n        }catch(e){\n            this.fail(e);\n        }\n            this.return(document);\n    }\n})","id":"2YTE3bfaUGsu","description":"generates a whole document based on: a title, a topic, number of chapters"}