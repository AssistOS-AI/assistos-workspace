{
    "workDir": ".",
    "dependencies": [
        {
            "name": "opendsu-sdk",
            "src": "http://github.com/opendsu/opendsu-sdk.git",
            "actions": [
                {
                    "type": "smartClone",
                    "target": ".",
                    "collectLog": false
                },
                {
                    "type": "execute",
                    "cmd": "cd opendsu-sdk && npm install"
                },
                {
                    "type": "copy",
                    "src": "./opendsu-sdk/psknode/bundles/iframeBoot.js",
                    "target": "./apihub-root/wallet/scripts/bundles/iframeBoot.js",
                    "options": {
                        "overwrite": true
                    }
                }
            ]
        }
    ],
    "patch": [

    ],
    "postinstall": [

      {
        "name": "copy-bundles",
        "actions": [
          {
            "type": "copy",
            "src": "./opendsu-sdk/psknode/bundles/webshims.js",
            "target": "./apihub-root/bundles/webshims.js",
            "options": {
              "overwrite": true
            }
          },
          {
            "type": "copy",
            "src": "./opendsu-sdk/psknode/bundles/loaderBoot.js",
            "target": "./apihub-root/bundles/loaderBoot.js",
            "options": {
              "overwrite": true
            }
          }
        ]
      }
    ],
    "build": [
      {
        "name": "build-all",
        "actions": [
          {
            "type": "execute",
            "cmd": "node ./node_modules/octopus/scripts/setEnv --file=../../../env.json \"node ./bin/octopusRun.js ssapps-and-wallets-build\""
          },
          {
            "type": "execute",
            "cmd": "node ./node_modules/octopus/scripts/setEnv --file=../../../env.json \"node ./bin/octopusRun.js postbuild\""
          }
        ]
      }
    ],
    "postbuild": [
      {
        "name": "patching trust loaders configs",
        "actions": [
          {
            "type": "execute",
            "cmd": "node ./node_modules/octopus/scripts/setEnv --file=../../../env.json \"node ./bin/octopusRun.js postinstall\""
          }
        ]
      }
    ],
    "install-mobile": [
      {
        "name": "mobile/scan-app/android",
        "src": "https://github.com/opendsu/android-light-edge-agent",
        "actions": [
          {
            "type": "smartClone",
            "target": ".",
            "collectLog": false
          },
          {
            "type": "execute",
            "cmd": "cd mobile/scan-app/android && npm install"
          }
        ]
      },
      {
        "name": "mobile/scan-app/ios",
        "src": "https://github.com/Pharmaledger-IMI/ios-edge-agent",
        "actions": [
          {
            "type": "smartClone",
            "target": ".",
            "collectLog": false
          },
          {
            "type": "execute",
            "cmd": "cd mobile/scan-app/ios/PSKNodeServer && carthage bootstrap"
          },
          {
            "type": "execute",
            "cmd": "echo \"Continue with ipa builds\""
          }
        ]
      }
    ],
    "build-android-apk": [
      {
        "name": "install NDK",
        "actions": [
          {
            "type": "execute",
            "cmd": "cd mobile/scan-app/android && gradlew.bat -b ndk.gradle installNDK",
            "os": "win32",
            "options": {
              "ignoreErrors": true
            }
          },
          {
            "type": "execute",
            "cmd": "cd mobile/scan-app/android && ./gradlew -b ndk.gradle installNDK",
            "os": "linux",
            "options": {
              "ignoreErrors": true
            }
          },
          {
            "type": "execute",
            "cmd": "cd mobile/scan-app/android && ./gradlew -b ndk.gradle installNDK",
            "os": "darwin",
            "options": {
              "ignoreErrors": true
            }
          }
        ]
      },
      {
        "name": "build APK",
        "actions": [
          {
            "type": "execute",
            "cmd": "cd mobile/scan-app/android && gradlew.bat assembleRelease",
            "os": "win32",
            "options": {
              "ignoreErrors": true
            }
          },
          {
            "type": "execute",
            "cmd": "cd mobile/scan-app/android && ./gradlew assembleRelease",
            "os": "linux",
            "options": {
              "ignoreErrors": true
            }
          },
          {
            "type": "execute",
            "cmd": "cd mobile/scan-app/android && ./gradlew assembleRelease",
            "os": "darwin",
            "options": {
              "ignoreErrors": true
            }
          },
          {
            "type": "execute",
            "cmd": "echo \"APK should be in mobile/scan-app/android/app/build/outputs/apk/release\" "
          }
        ]
      }
    ],
    "prepare-build-mobile": [
      {
        "name": "prebuild",
        "actions": [
          {
            "type": "execute",
            "cmd": "npm run clean"
          },
          {
              "type": "remove",
              "target": "apihub-root/external-volume/cache"
          },
          {
            "type": "execute",
            "cmd": "cd reporting-service && npm run build"
          },
          {
            "type": "copy",
            "src": "./reporting-service/build/bundles/acdc.js",
            "target": "./leaflet-ssapp/code/scripts/bundles/acdc.js",
            "options": {
              "overwrite": true
            }
          },
          {
            "type": "execute",
            "cmd": "cd acdc/native-integration && npm run build",
            "options": {
              "ignoreErrors": true
            }
          }
        ]
      }
    ],
    "build-ssapps-and-configure-apihub-mobile": [
      
    ],
    "build-mobile": [
      {
        "name": "prepare-phase",
        "actions": [
          {
            "type": "execute",
            "cmd": "node ./node_modules/octopus/scripts/setEnv --file=../../../env.json \"node ./bin/octopusRun.js prepare-build-mobile\""
          }
        ]
      },
      {
        "name": "prepare-phase",
        "actions": [
          {
            "type": "execute",
            "cmd": "node ./node_modules/octopus/scripts/setEnv --file=../../../env.json \"node ./bin/octopusRun.js patching-mobile\""
          }
        ]
      }
    ],
    "patching-mobile": [
      {
        "name": "build-android-app",
        "actions": [
          {
            "type": "remove",
            "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project"
          },
          {
            "type": "copy",
            "src": "bin/MobileServerLauncher.js",
            "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/MobileServerLauncher.js"
          },
          {
            "type": "copy",
            "src": "opendsu-sdk/psknode/bundles/pskWebServer.js",
            "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/pskWebServer.js"
          },
          {
            "type": "copy",
            "src": "opendsu-sdk/psknode/bundles/nodeBoot.js",
            "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/nodeBoot.js"
          },
          {
            "type": "copy",
            "src": "apihub-root/internal-volume",
            "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/apihub-root/internal-volume"
          },
          {
            "type": "copy",
            "src": "apihub-root/external-volume",
            "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/apihub-root/external-volume"
          },
          {
            "type": "copy",
            "src": "./acdc/native-integration/build/bundles/default/camera.js",
            "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/apihub-root/app/camera.js",
            "options": {
              "overwrite": true,
              "ignoreErrors": true
            }
          },
          {
              "type": "copy",
              "src": "./leaflet-ssapp/code",
              "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/apihub-root/app"
          },
          {
            "type": "copy",
            "src": "./preloader/index.html",
            "target": "mobile/scan-app/android/app/src/main/assets/preloader.html"
          },
          {
              "type": "replaceString",
              "src": "mobile/scan-app/android/app/src/main/assets/nodejs-project/apihub-root/app/index.html",
              "oldValue": "PLACEHOLDER_THAT_WILL_BE_REPLACED_BY_SW_OR_SERVER_WITH_BASE_TAG",
              "newValue": "<base href=\"/\">"
          },
          {
              "type": "copy",
              "src": "./opendsu-sdk/psknode/bundles/pskruntime.js",
              "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/apihub-root/app/scripts/bundles/pskruntime.js"
          },
          {
              "type": "copy",
              "src": "./opendsu-sdk/psknode/bundles/webshims.js",
              "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/apihub-root/app/scripts/bundles/webshims.js"
          },
          {
              "type": "copy",
              "src": "./opendsu-sdk/psknode/bundles/iframeBoot.js",
              "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/apihub-root/app/scripts/bundles/iframeBoot.js"
          },
          {
              "type": "copy",
              "src": "./gtin-resolver/build/bundles/gtinResolver.js",
              "target": "mobile/scan-app/android/app/src/main/assets/nodejs-project/apihub-root/app/scripts/bundles/gtinResolver.js"
          },
          {
            "type": "copy",
            "src": "mobile/config/scan-app/android",
            "target": "mobile/scan-app/android",
            "options": {
              "overwrite": true
            }
          }
        ]
      },
      {
        "name": "build-ios-app",
        "actions": [
          {
            "type": "remove",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject"
          },
          {
            "type": "copy",
            "src": "bin/MobileServerLauncher.js",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/serverFiles/MobileServerLauncher.js"
          },
          {
            "type": "copy",
            "src": "opendsu-sdk/psknode/bundles/pskWebServer.js",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/serverFiles/pskWebServer.js"
          },
          {
            "type": "copy",
            "src": "opendsu-sdk/psknode/bundles/nodeBoot.js",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/serverFiles/nodeBoot.js"
          },
          {
            "type": "copy",
            "src": "apihub-root/internal-volume",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/serverFiles/apihub-root/internal-volume"
          },
          {
            "type": "copy",
            "src": "apihub-root/external-volume",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/serverFiles/apihub-root/external-volume"
          },
          {
            "type": "copy",
            "src": "./acdc/native-integration/build/bundles/ios/camera.js",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/app/camera.js",
            "options": {
              "overwrite": true,
              "ignoreErrors": true
            }
          },
          {
            "type": "copy",
            "src": "./leaflet-ssapp/code",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/app"
          },
          {
            "type": "copy",
            "src": "./preloader/index.html",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/preloader.html"
          },
          {
            "type": "replaceString",
            "src": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/app/index.html",
            "oldValue": "PLACEHOLDER_THAT_WILL_BE_REPLACED_BY_SW_OR_SERVER_WITH_BASE_TAG",
            "newValue": "<base href=\"/\">"
          },
          {
            "type": "copy",
            "src": "./opendsu-sdk/psknode/bundles/pskruntime.js",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/app/scripts/bundles/pskruntime.js"
          },
          {
            "type": "copy",
            "src": "./opendsu-sdk/psknode/bundles/webshims.js",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/app/scripts/bundles/webshims.js"
          },
          {
            "type": "copy",
            "src": "./opendsu-sdk/psknode/bundles/iframeBoot.js",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/app/scripts/bundles/iframeBoot.js"
          },
          {
            "type": "copy",
            "src": "./gtin-resolver/build/bundles/gtinResolver.js",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/app/scripts/bundles/gtinResolver.js"
          },
          {
            "type": "copy",
            "src": "mobile/config/scan-app/ios",
            "target": "mobile/scan-app/ios",
            "options": {
              "overwrite": true
            }
          },
          {
            "type": "copy",
            "src": "mobile/scan-app/ios/nativeBridge.js",
            "target": "mobile/scan-app/ios/PSKNodeServer/PSKNodeServer/nodejsProject/app/nativeBridge.js",
            "options": {
              "overwrite": true
            }
          }
        ]
      }
    ],
    "install-acf-ssapps": [
      {
        "name": "delayv-auth-feat-ssapp",
        "src": "https://github.com/delayv/acdc-authentication-feature-59k3.git",
        "actions": [
          {
            "type": "smartClone",
            "target": ".",
            "collectLog": false
          },
          {
            "type": "execute",
            "cmd": "cd delayv-auth-feat-ssapp && npm install"
          }
        ]
      },
      {
        "name": "acdc-authentication-feature-template",
        "src": "https://github.com/Pharmaledger-IMI/acdc-authentication-feature-template",
        "actions": [
          {
            "type": "smartClone",
            "target": ".",
            "collectLog": false
          },
          {
            "type": "execute",
            "cmd": "cd acdc-authentication-feature-template && npm install"
          }
        ]
      },
      {
        "name": "truemedhemo-auth-feat-ssapp",
        "src": "https://github.com/TrueMedHemmo/acdc-authentication-feature-template",
        "actions": [
          {
            "type": "smartClone",
            "target": ".",
            "collectLog": false
          },
          {
            "type": "execute",
            "cmd": "cd truemedhemo-auth-feat-ssapp && npm install"
          }
        ]
      },
      {
          "name": "uniqode-auth-feat-ssapp",
          "src": "https://github.com/Pharmaledger-IMI/pharma-incmlab.git",
          "actions": [
              {
                  "type": "smartClone",
                  "target": ".",
                  "collectLog": false
              },
              {
                  "type": "execute",
                  "cmd": "cd uniqode-auth-feat-ssapp && npm install"
              }
          ]
      }
    ],
    "build-acf-ssapps": [
      {
        "name": "build-dfm",
        "actions": [
          {
            "type": "execute",
            "cmd": "cd delayv-auth-feat-ssapp && npm run build"
          },
          {
            "type": "execute",
            "cmd": "cd truemedhemo-auth-feat-ssapp && npm run build"
          },
          {
              "type": "execute",
              "cmd": "cd uniqode-auth-feat-ssapp && npm run build"
          },
          {
            "type": "execute",
            "cmd": "cd acdc-authentication-feature-template && npm run build"
          },
          {
            "type": "execute",
            "cmd": "node ./node_modules/octopus/scripts/setEnv --file=../../../env.json \"node ./bin/octopusRun.js patching-mobile\""
          }
        ]
      }
    ]
  
  }
